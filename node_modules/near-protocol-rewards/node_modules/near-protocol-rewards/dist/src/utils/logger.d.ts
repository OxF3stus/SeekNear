export interface ILogger {
    level: string;
    shouldLog: (level: string) => boolean;
    debug: (message: string, context?: Record<string, unknown>) => void;
    info: (message: string, context?: Record<string, unknown>) => void;
    warn: (message: string, context?: Record<string, unknown>) => void;
    error: (message: string, context?: Record<string, unknown>) => void;
}
export declare class ConsoleLogger implements ILogger {
    readonly level: string;
    constructor(level?: string);
    shouldLog(level: string): boolean;
    debug(message: string, context?: Record<string, unknown>): void;
    info(message: string, context?: Record<string, unknown>): void;
    warn(message: string, context?: Record<string, unknown>): void;
    error(message: string, context?: Record<string, unknown>): void;
}
export declare const defaultLogger: ConsoleLogger;
export type Logger = ConsoleLogger;
